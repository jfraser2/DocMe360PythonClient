# coding: utf-8

# flake8: noqa

"""
    Available REST Services

    Request and Response format is JSON, Request validation is: jakarta validation enhanced with a Framework. Since there are so many ways to do Security. I choose a simple one for this project. The user must put a JWT Token in the request header or in a request cookie (will make the AngularJS folks happy). JWT Tokens copied directly from the site http://jwt.io may not work. Why you ask? On the Windows Platform the Character set gets changed, it is not longer UTF-8, it becomes Cp1252 (Eclipse Project Default). No worries, a Junit Test was made to build Tokens. It is called BuildJwtToken. For Swagger usage, copy the token from the Eclipse project Console instead. The Secret to making the JUnit produce a UTF-8 token is to set the Windows Environment Variable JAVA_TOOL_OPTIONS to value -Dfile.encoding=UTF-8

    The version of the OpenAPI document: 1.0.0
    Contact: jfraser2@yahoo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


__version__ = "1.0.0"

# Define package exports
__all__ = [
    "NotificationControllerApi",
    "TemplateControllerApi",
    "ApiResponse",
    "ApiClient",
    "Configuration",
    "OpenApiException",
    "ApiTypeError",
    "ApiValueError",
    "ApiKeyError",
    "ApiAttributeError",
    "ApiException",
    "CreateNotification",
    "CreateTemplate",
    "UpdateTemplate",
]

# import apis into sdk package
from openapi_client.api.notification_controller_api import NotificationControllerApi as NotificationControllerApi
from openapi_client.api.template_controller_api import TemplateControllerApi as TemplateControllerApi

# import ApiClient
from openapi_client.api_response import ApiResponse as ApiResponse
from openapi_client.api_client import ApiClient as ApiClient
from openapi_client.configuration import Configuration as Configuration
from openapi_client.exceptions import OpenApiException as OpenApiException
from openapi_client.exceptions import ApiTypeError as ApiTypeError
from openapi_client.exceptions import ApiValueError as ApiValueError
from openapi_client.exceptions import ApiKeyError as ApiKeyError
from openapi_client.exceptions import ApiAttributeError as ApiAttributeError
from openapi_client.exceptions import ApiException as ApiException

# import models into sdk package
from openapi_client.models.create_notification import CreateNotification as CreateNotification
from openapi_client.models.create_template import CreateTemplate as CreateTemplate
from openapi_client.models.update_template import UpdateTemplate as UpdateTemplate

# coding: utf-8

"""
    Available REST Services

    Request and Response format is JSON, Request validation is: jakarta validation enhanced with a Framework. Since there are so many ways to do Security. I choose a simple one for this project. The user must put a JWT Token in the request header or in a request cookie (will make the AngularJS folks happy). JWT Tokens copied directly from the site http://jwt.io may not work. Why you ask? On the Windows Platform the Character set gets changed, it is not longer UTF-8, it becomes Cp1252 (Eclipse Project Default). No worries, a Junit Test was made to build Tokens. It is called BuildJwtToken. For Swagger usage, copy the token from the Eclipse project Console instead. The Secret to making the JUnit produce a UTF-8 token is to set the Windows Environment Variable JAVA_TOOL_OPTIONS to value -Dfile.encoding=UTF-8

    The version of the OpenAPI document: 1.0.0
    Contact: jfraser2@yahoo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_notification import CreateNotification

class TestCreateNotification(unittest.TestCase):
    """CreateNotification unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateNotification:
        """Test CreateNotification
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateNotification`
        """
        model = CreateNotification()
        if include_optional:
            return CreateNotification(
                phone_number = '',
                personalization = '',
                template_id = '4807288800152802179809',
                template_text = ''
            )
        else:
            return CreateNotification(
                phone_number = '',
        )
        """

    def testCreateNotification(self):
        """Test CreateNotification"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
